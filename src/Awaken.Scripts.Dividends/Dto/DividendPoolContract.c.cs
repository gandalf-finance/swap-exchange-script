// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dividend_pool_contract.proto
// </auto-generated>
// Original file comments:
// This files is part of the Hello World smart contract example that is included in Boilerplate.
// It is only the definition of the contract, implementation is located in the "contract" folder
// and tests are located in the "test" folder.
//
// You can use this as a basic template for new contracts.
// 
// When building Boilerplate or the contract project located in the "../contract/Awaken.Contracts.DividendPool/" 
// protoc (the protobuf compiler) will be invoked and this file will produce a .c.cs file and .g.cs file, in the 
// "../contract/Awaken.Contracts.DividendPool/Protobuf/Generated/" folder. 
//
// the version of the language, use proto3 for contracts
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace Awaken.Contracts.DividendPoolContract {

  #region Events
  public partial class UpdatePool : aelf::IEvent<UpdatePool>
  {
    public global::System.Collections.Generic.IEnumerable<UpdatePool> GetIndexed()
    {
      return new List<UpdatePool>
      {
      };
    }

    public UpdatePool GetNonIndexed()
    {
      return new UpdatePool
      {
        Pid = Pid,
        Token = Token,
        Reward = Reward,
        AccPerShare = AccPerShare,
        BlockHeight = BlockHeight,
      };
    }
  }

  public partial class Harvest : aelf::IEvent<Harvest>
  {
    public global::System.Collections.Generic.IEnumerable<Harvest> GetIndexed()
    {
      return new List<Harvest>
      {
      };
    }

    public Harvest GetNonIndexed()
    {
      return new Harvest
      {
        To = To,
        Amount = Amount,
        Token = Token,
        Pid = Pid,
      };
    }
  }

  public partial class Deposit : aelf::IEvent<Deposit>
  {
    public global::System.Collections.Generic.IEnumerable<Deposit> GetIndexed()
    {
      return new List<Deposit>
      {
      };
    }

    public Deposit GetNonIndexed()
    {
      return new Deposit
      {
        User = User,
        Pid = Pid,
        Amount = Amount,
      };
    }
  }

  public partial class Withdraw : aelf::IEvent<Withdraw>
  {
    public global::System.Collections.Generic.IEnumerable<Withdraw> GetIndexed()
    {
      return new List<Withdraw>
      {
      };
    }

    public Withdraw GetNonIndexed()
    {
      return new Withdraw
      {
        User = User,
        Pid = Pid,
        Amount = Amount,
      };
    }
  }

  public partial class SetCycle : aelf::IEvent<SetCycle>
  {
    public global::System.Collections.Generic.IEnumerable<SetCycle> GetIndexed()
    {
      return new List<SetCycle>
      {
      };
    }

    public SetCycle GetNonIndexed()
    {
      return new SetCycle
      {
        Cycle = Cycle,
      };
    }
  }

  public partial class AddToken : aelf::IEvent<AddToken>
  {
    public global::System.Collections.Generic.IEnumerable<AddToken> GetIndexed()
    {
      return new List<AddToken>
      {
      };
    }

    public AddToken GetNonIndexed()
    {
      return new AddToken
      {
        TokenSymbol = TokenSymbol,
        Index = Index,
      };
    }
  }

  public partial class NewReward : aelf::IEvent<NewReward>
  {
    public global::System.Collections.Generic.IEnumerable<NewReward> GetIndexed()
    {
      return new List<NewReward>
      {
      };
    }

    public NewReward GetNonIndexed()
    {
      return new NewReward
      {
        Token = Token,
        PerBlocks = PerBlocks,
        Amount = Amount,
        StartBlock = StartBlock,
        EndBlock = EndBlock,
      };
    }
  }

  public partial class AddPool : aelf::IEvent<AddPool>
  {
    public global::System.Collections.Generic.IEnumerable<AddPool> GetIndexed()
    {
      return new List<AddPool>
      {
      };
    }

    public AddPool GetNonIndexed()
    {
      return new AddPool
      {
        Token = Token,
        AllocPoint = AllocPoint,
        LastRewardBlock = LastRewardBlock,
        Pid = Pid,
      };
    }
  }

  public partial class SetPool : aelf::IEvent<SetPool>
  {
    public global::System.Collections.Generic.IEnumerable<SetPool> GetIndexed()
    {
      return new List<SetPool>
      {
      };
    }

    public SetPool GetNonIndexed()
    {
      return new SetPool
      {
        Pid = Pid,
        AllocationPoint = AllocationPoint,
      };
    }
  }

  #endregion
  /// <summary>
  /// the contract definition: a gRPC service definition.
  /// </summary>
  public static partial class DividendPoolContractContainer
  {
    static readonly string __ServiceName = "DividendPoolContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.InitializeInput> __Marshaller_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.Token> __Marshaller_Token = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.Token.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.NewRewardInput> __Marshaller_NewRewardInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.NewRewardInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int32Value> __Marshaller_google_protobuf_Int32Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int32Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.AddPoolInput> __Marshaller_AddPoolInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.AddPoolInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.SetPoolInput> __Marshaller_SetPoolInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.SetPoolInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.TokenOptionInput> __Marshaller_TokenOptionInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.TokenOptionInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.PendingInput> __Marshaller_PendingInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.PendingInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.PendingOutput> __Marshaller_PendingOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.PendingOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.BoolValue> __Marshaller_google_protobuf_BoolValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.BoolValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.BigIntValue> __Marshaller_aelf_BigIntValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.BigIntValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.Pool> __Marshaller_Pool = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.Pool.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.UserInfoInput> __Marshaller_UserInfoInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.UserInfoInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.User> __Marshaller_User = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.User.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int64Value> __Marshaller_google_protobuf_Int64Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int64Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.RewardDebtInput> __Marshaller_RewardDebtInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.RewardDebtInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Awaken.Contracts.DividendPoolContract.AccPerShareInput> __Marshaller_AccPerShareInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Awaken.Contracts.DividendPoolContract.AccPerShareInput.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.Token, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddToken = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.Token, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddToken",
        __Marshaller_Token,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.NewRewardInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_NewReward = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.NewRewardInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "NewReward",
        __Marshaller_NewRewardInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetCycle = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetCycle",
        __Marshaller_google_protobuf_Int32Value,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.AddPoolInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Add = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.AddPoolInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Add",
        __Marshaller_AddPoolInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.SetPoolInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Set = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.SetPoolInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Set",
        __Marshaller_SetPoolInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_MassUpdatePools = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "MassUpdatePools",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdatePool = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdatePool",
        __Marshaller_google_protobuf_Int32Value,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.TokenOptionInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Deposit = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.TokenOptionInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Deposit",
        __Marshaller_TokenOptionInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.TokenOptionInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Withdraw = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.TokenOptionInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Withdraw",
        __Marshaller_TokenOptionInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.PendingInput, global::Awaken.Contracts.DividendPoolContract.PendingOutput> __Method_Pending = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.PendingInput, global::Awaken.Contracts.DividendPoolContract.PendingOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "Pending",
        __Marshaller_PendingInput,
        __Marshaller_PendingOutput);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int32Value> __Method_PoolLength = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int32Value>(
        aelf::MethodType.View,
        __ServiceName,
        "PoolLength",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int32Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int32Value> __Method_GetTokenListLength = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int32Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetTokenListLength",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int32Value);

    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.Token, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_IsTokenList = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.Token, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "IsTokenList",
        __Marshaller_Token,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_Owner = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "Owner",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_TokenList = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "TokenList",
        __Marshaller_google_protobuf_Int32Value,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Types.BigIntValue> __Method_PerBlock = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Types.BigIntValue>(
        aelf::MethodType.View,
        __ServiceName,
        "PerBlock",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_aelf_BigIntValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::Awaken.Contracts.DividendPoolContract.Pool> __Method_PoolInfo = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::Awaken.Contracts.DividendPoolContract.Pool>(
        aelf::MethodType.View,
        __ServiceName,
        "PoolInfo",
        __Marshaller_google_protobuf_Int32Value,
        __Marshaller_Pool);

    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.UserInfoInput, global::Awaken.Contracts.DividendPoolContract.User> __Method_UserInfo = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.UserInfoInput, global::Awaken.Contracts.DividendPoolContract.User>(
        aelf::MethodType.View,
        __ServiceName,
        "UserInfo",
        __Marshaller_UserInfoInput,
        __Marshaller_User);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_TotalAllocPoint = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "TotalAllocPoint",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_StartBlock = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "StartBlock",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_EndBlock = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "EndBlock",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_Cycle = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "Cycle",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.RewardDebtInput, global::AElf.Types.BigIntValue> __Method_RewardDebt = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.RewardDebtInput, global::AElf.Types.BigIntValue>(
        aelf::MethodType.View,
        __ServiceName,
        "RewardDebt",
        __Marshaller_RewardDebtInput,
        __Marshaller_aelf_BigIntValue);

    static readonly aelf::Method<global::Awaken.Contracts.DividendPoolContract.AccPerShareInput, global::AElf.Types.BigIntValue> __Method_AccPerShare = new aelf::Method<global::Awaken.Contracts.DividendPoolContract.AccPerShareInput, global::AElf.Types.BigIntValue>(
        aelf::MethodType.View,
        __ServiceName,
        "AccPerShare",
        __Marshaller_AccPerShareInput,
        __Marshaller_aelf_BigIntValue);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Awaken.Contracts.DividendPoolContract.DividendPoolContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::Awaken.Contracts.DividendPoolContract.DividendPoolContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

  }
}
#endregion

